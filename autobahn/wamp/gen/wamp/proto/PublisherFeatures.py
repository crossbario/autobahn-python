# automatically generated by the FlatBuffers compiler, do not modify

# namespace: proto

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PublisherFeatures(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PublisherFeatures()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPublisherFeatures(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PublisherFeatures
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PublisherFeatures
    def PublisherIdentification(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # PublisherFeatures
    def PublisherExclusion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # PublisherFeatures
    def SubscriberBlackwhiteListing(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # PublisherFeatures
    def AcknowledgeEventReceived(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # PublisherFeatures
    def PayloadTransparency(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # PublisherFeatures
    def PayloadEncryptionCryptobox(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def Start(builder): builder.StartObject(6)
def PublisherFeaturesStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddPublisherIdentification(builder, publisherIdentification): builder.PrependBoolSlot(0, publisherIdentification, 0)
def PublisherFeaturesAddPublisherIdentification(builder, publisherIdentification):
    """This method is deprecated. Please switch to AddPublisherIdentification."""
    return AddPublisherIdentification(builder, publisherIdentification)
def AddPublisherExclusion(builder, publisherExclusion): builder.PrependBoolSlot(1, publisherExclusion, 0)
def PublisherFeaturesAddPublisherExclusion(builder, publisherExclusion):
    """This method is deprecated. Please switch to AddPublisherExclusion."""
    return AddPublisherExclusion(builder, publisherExclusion)
def AddSubscriberBlackwhiteListing(builder, subscriberBlackwhiteListing): builder.PrependBoolSlot(2, subscriberBlackwhiteListing, 0)
def PublisherFeaturesAddSubscriberBlackwhiteListing(builder, subscriberBlackwhiteListing):
    """This method is deprecated. Please switch to AddSubscriberBlackwhiteListing."""
    return AddSubscriberBlackwhiteListing(builder, subscriberBlackwhiteListing)
def AddAcknowledgeEventReceived(builder, acknowledgeEventReceived): builder.PrependBoolSlot(3, acknowledgeEventReceived, 0)
def PublisherFeaturesAddAcknowledgeEventReceived(builder, acknowledgeEventReceived):
    """This method is deprecated. Please switch to AddAcknowledgeEventReceived."""
    return AddAcknowledgeEventReceived(builder, acknowledgeEventReceived)
def AddPayloadTransparency(builder, payloadTransparency): builder.PrependBoolSlot(4, payloadTransparency, 0)
def PublisherFeaturesAddPayloadTransparency(builder, payloadTransparency):
    """This method is deprecated. Please switch to AddPayloadTransparency."""
    return AddPayloadTransparency(builder, payloadTransparency)
def AddPayloadEncryptionCryptobox(builder, payloadEncryptionCryptobox): builder.PrependBoolSlot(5, payloadEncryptionCryptobox, 0)
def PublisherFeaturesAddPayloadEncryptionCryptobox(builder, payloadEncryptionCryptobox):
    """This method is deprecated. Please switch to AddPayloadEncryptionCryptobox."""
    return AddPayloadEncryptionCryptobox(builder, payloadEncryptionCryptobox)
def End(builder): return builder.EndObject()
def PublisherFeaturesEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)