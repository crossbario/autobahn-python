# automatically generated by the FlatBuffers compiler, do not modify

# namespace: proto

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BrokerFeatures(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BrokerFeatures()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBrokerFeatures(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BrokerFeatures
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BrokerFeatures
    def PublisherIdentification(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def PublisherExclusion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def SubscriberBlackwhiteListing(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def PatternBasedSubscription(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def PublicationTrustlevels(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def SubscriptionRevocation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def SessionMetaApi(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def SubscriptionMetaApi(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def EventRetention(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def EventHistory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def AcknowledgeEventReceived(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def AcknowledgeSubscriberReceived(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def PayloadTransparency(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # BrokerFeatures
    def PayloadEncryptionCryptobox(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def Start(builder): builder.StartObject(14)
def BrokerFeaturesStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddPublisherIdentification(builder, publisherIdentification): builder.PrependBoolSlot(0, publisherIdentification, 0)
def BrokerFeaturesAddPublisherIdentification(builder, publisherIdentification):
    """This method is deprecated. Please switch to AddPublisherIdentification."""
    return AddPublisherIdentification(builder, publisherIdentification)
def AddPublisherExclusion(builder, publisherExclusion): builder.PrependBoolSlot(1, publisherExclusion, 0)
def BrokerFeaturesAddPublisherExclusion(builder, publisherExclusion):
    """This method is deprecated. Please switch to AddPublisherExclusion."""
    return AddPublisherExclusion(builder, publisherExclusion)
def AddSubscriberBlackwhiteListing(builder, subscriberBlackwhiteListing): builder.PrependBoolSlot(2, subscriberBlackwhiteListing, 0)
def BrokerFeaturesAddSubscriberBlackwhiteListing(builder, subscriberBlackwhiteListing):
    """This method is deprecated. Please switch to AddSubscriberBlackwhiteListing."""
    return AddSubscriberBlackwhiteListing(builder, subscriberBlackwhiteListing)
def AddPatternBasedSubscription(builder, patternBasedSubscription): builder.PrependBoolSlot(3, patternBasedSubscription, 0)
def BrokerFeaturesAddPatternBasedSubscription(builder, patternBasedSubscription):
    """This method is deprecated. Please switch to AddPatternBasedSubscription."""
    return AddPatternBasedSubscription(builder, patternBasedSubscription)
def AddPublicationTrustlevels(builder, publicationTrustlevels): builder.PrependBoolSlot(4, publicationTrustlevels, 0)
def BrokerFeaturesAddPublicationTrustlevels(builder, publicationTrustlevels):
    """This method is deprecated. Please switch to AddPublicationTrustlevels."""
    return AddPublicationTrustlevels(builder, publicationTrustlevels)
def AddSubscriptionRevocation(builder, subscriptionRevocation): builder.PrependBoolSlot(5, subscriptionRevocation, 0)
def BrokerFeaturesAddSubscriptionRevocation(builder, subscriptionRevocation):
    """This method is deprecated. Please switch to AddSubscriptionRevocation."""
    return AddSubscriptionRevocation(builder, subscriptionRevocation)
def AddSessionMetaApi(builder, sessionMetaApi): builder.PrependBoolSlot(6, sessionMetaApi, 0)
def BrokerFeaturesAddSessionMetaApi(builder, sessionMetaApi):
    """This method is deprecated. Please switch to AddSessionMetaApi."""
    return AddSessionMetaApi(builder, sessionMetaApi)
def AddSubscriptionMetaApi(builder, subscriptionMetaApi): builder.PrependBoolSlot(7, subscriptionMetaApi, 0)
def BrokerFeaturesAddSubscriptionMetaApi(builder, subscriptionMetaApi):
    """This method is deprecated. Please switch to AddSubscriptionMetaApi."""
    return AddSubscriptionMetaApi(builder, subscriptionMetaApi)
def AddEventRetention(builder, eventRetention): builder.PrependBoolSlot(8, eventRetention, 0)
def BrokerFeaturesAddEventRetention(builder, eventRetention):
    """This method is deprecated. Please switch to AddEventRetention."""
    return AddEventRetention(builder, eventRetention)
def AddEventHistory(builder, eventHistory): builder.PrependBoolSlot(9, eventHistory, 0)
def BrokerFeaturesAddEventHistory(builder, eventHistory):
    """This method is deprecated. Please switch to AddEventHistory."""
    return AddEventHistory(builder, eventHistory)
def AddAcknowledgeEventReceived(builder, acknowledgeEventReceived): builder.PrependBoolSlot(10, acknowledgeEventReceived, 0)
def BrokerFeaturesAddAcknowledgeEventReceived(builder, acknowledgeEventReceived):
    """This method is deprecated. Please switch to AddAcknowledgeEventReceived."""
    return AddAcknowledgeEventReceived(builder, acknowledgeEventReceived)
def AddAcknowledgeSubscriberReceived(builder, acknowledgeSubscriberReceived): builder.PrependBoolSlot(11, acknowledgeSubscriberReceived, 0)
def BrokerFeaturesAddAcknowledgeSubscriberReceived(builder, acknowledgeSubscriberReceived):
    """This method is deprecated. Please switch to AddAcknowledgeSubscriberReceived."""
    return AddAcknowledgeSubscriberReceived(builder, acknowledgeSubscriberReceived)
def AddPayloadTransparency(builder, payloadTransparency): builder.PrependBoolSlot(12, payloadTransparency, 0)
def BrokerFeaturesAddPayloadTransparency(builder, payloadTransparency):
    """This method is deprecated. Please switch to AddPayloadTransparency."""
    return AddPayloadTransparency(builder, payloadTransparency)
def AddPayloadEncryptionCryptobox(builder, payloadEncryptionCryptobox): builder.PrependBoolSlot(13, payloadEncryptionCryptobox, 0)
def BrokerFeaturesAddPayloadEncryptionCryptobox(builder, payloadEncryptionCryptobox):
    """This method is deprecated. Please switch to AddPayloadEncryptionCryptobox."""
    return AddPayloadEncryptionCryptobox(builder, payloadEncryptionCryptobox)
def End(builder): return builder.EndObject()
def BrokerFeaturesEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)