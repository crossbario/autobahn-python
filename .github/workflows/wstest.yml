name: wstest

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      test_mode:
        description: "Test mode to run"
        required: false
        default: "quick"
        type: choice
        options:
          - quick
          - full

env:
  UV_CACHE_DIR: ${{ github.workspace }}/.uv-cache
  # Test mode: 'quick' for fast CI, 'full' for comprehensive testing
  TEST_MODE: ${{ github.event.inputs.test_mode || 'quick' }}

jobs:
  # Client testing: Test autobahn-python clients against testsuite server
  client-conformance:
    name: WebSocket Client Testing (${{ matrix.backend }})
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        backend: [twisted, asyncio]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          source $HOME/.cargo/env
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Verify toolchain installation
        run: |
          just --version
          uv --version
          docker --version

      - name: Setup uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-cache-ubuntu-wstest-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-cache-ubuntu-wstest-

      - name: Setup Python environment
        run: |
          just create cpy314
          just install cpy314

      - name: Install Autobahn|Testsuite Docker image
        run: just install-wstest

      - name: Start Autobahn|Testsuite server (background)
        run: |
          echo "==> Starting Autobahn|Testsuite server in background..."
          nohup just wstest-fuzzingserver > fuzzingserver.log 2>&1 &
          echo $! > fuzzingserver.pid
          
          # Wait for server to be ready
          echo "==> Waiting for fuzzingserver to be ready..."
          sleep 15
          
          # Verify server is running
          if ! docker ps | grep -q fuzzingserver; then
            echo "❌ Fuzzingserver failed to start"
            cat fuzzingserver.log
            exit 1
          fi
          echo "✅ Fuzzingserver is running"

      - name: Test ${{ matrix.backend }} client
        run: |
          echo "==> Testing ${{ matrix.backend }} WebSocket client..."
          if [ "${{ matrix.backend }}" = "twisted" ]; then
            just wstest-testeeclient-twisted cpy314
          else
            just wstest-testeeclient-asyncio cpy314
          fi

      - name: Stop fuzzingserver and collect results
        if: always()
        run: |
          echo "==> Stopping fuzzingserver..."
          if [ -f fuzzingserver.pid ]; then
            kill $(cat fuzzingserver.pid) || true
          fi
          docker stop fuzzingserver || true
          
          echo "==> Client test results for ${{ matrix.backend }}:"
          ls -la .wstest/clients/ || echo "No client reports found"

      - name: Upload client test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: client-reports-${{ matrix.backend }}-${{ env.TEST_MODE }}
          path: .wstest/clients/
          retention-days: 30

  # Server testing: Test both autobahn-python servers against testsuite client
  server-conformance:
    name: WebSocket Server Testing
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          source $HOME/.cargo/env
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Verify toolchain installation
        run: |
          just --version
          uv --version
          docker --version

      - name: Setup uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-cache-ubuntu-wstest-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-cache-ubuntu-wstest-

      - name: Setup Python environment
        run: |
          just create cpy314
          just install cpy314

      - name: Install Autobahn|Testsuite Docker image
        run: just install-wstest

      - name: Start Autobahn|Python servers (background)
        run: |
          echo "==> Starting Twisted server on port 9011..."
          nohup .venvs/cpy314/bin/python ./wstest/testee_server_tx.py --url ws://127.0.0.1:9011 > twisted-server.log 2>&1 &
          echo $! > twisted-server.pid
          
          echo "==> Starting asyncio server on port 9012..."
          nohup .venvs/cpy314/bin/python ./wstest/testee_server_aio.py --url ws://127.0.0.1:9012 > asyncio-server.log 2>&1 &
          echo $! > asyncio-server.pid
          
          # Wait for servers to be ready
          echo "==> Waiting for servers to be ready..."
          sleep 15
          
          # Verify both servers are listening
          if ! netstat -tlnp | grep -q ":9011"; then
            echo "❌ Twisted server failed to start on port 9011"
            cat twisted-server.log
            exit 1
          fi
          
          if ! netstat -tlnp | grep -q ":9012"; then
            echo "❌ asyncio server failed to start on port 9012"
            cat asyncio-server.log
            exit 1
          fi
          
          echo "✅ Both servers are running"
          netstat -tlnp | grep -E ":(9011|9012)"

      - name: Test servers with fuzzingclient
        run: |
          echo "==> Testing both Autobahn|Python servers..."
          just wstest-fuzzingclient

      - name: Stop servers and collect results
        if: always()
        run: |
          echo "==> Stopping servers..."
          if [ -f twisted-server.pid ]; then
            kill $(cat twisted-server.pid) || true
          fi
          if [ -f asyncio-server.pid ]; then
            kill $(cat asyncio-server.pid) || true
          fi
          
          echo "==> Server test results:"
          ls -la .wstest/servers/ || echo "No server reports found"

      - name: Upload server test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: server-reports-${{ env.TEST_MODE }}
          path: .wstest/servers/
          retention-days: 30

  # Consolidate all reports
  consolidate-reports:
    name: Consolidate WebSocket Reports
    needs: [client-conformance, server-conformance]
    runs-on: ubuntu-24.04
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all WebSocket reports
        uses: actions/download-artifact@v4
        with:
          pattern: "*-reports-*"
          merge-multiple: false
          path: all-reports/

      - name: Create consolidated report index
        run: |
          mkdir -p consolidated-wstest-reports
          
          echo "==> Creating consolidated WebSocket conformance report..."
          
          cat > consolidated-wstest-reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Autobahn|Python WebSocket Conformance Reports</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  h2 { color: #0066cc; border-bottom: 2px solid #eee; padding-bottom: 10px; }
                  .test-section { margin: 30px 0; }
                  .test-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin: 20px 0; }
                  .test-card { border: 1px solid #ddd; padding: 15px; border-radius: 5px; background: #f9f9f9; }
                  .test-card h3 { margin-top: 0; color: #0066cc; }
                  .test-mode { background: #f0f8ff; padding: 15px; border-radius: 5px; margin-bottom: 30px; }
                  .server-note { background: #fff5f5; border-left: 4px solid #e53e3e; padding: 15px; margin: 20px 0; }
              </style>
          </head>
          <body>
              <h1>🔌 Autobahn|Python WebSocket Conformance Reports</h1>

              <div class="test-mode">
                  <strong>Test Mode:</strong> ${{ env.TEST_MODE }}
                  <br><strong>Generated:</strong> $(date -u '+%Y-%m-%d %H:%M:%S UTC')
                  <br><strong>Commit:</strong> ${{ github.sha }}
                  <br><strong>Branch:</strong> ${{ github.ref_name }}
              </div>

              <p>This page provides WebSocket protocol conformance test results for Autobahn|Python
              against the <a href="https://github.com/crossbario/autobahn-testsuite">Autobahn|Testsuite</a>.</p>

              <div class="test-section">
                  <h2>📤 Client Testing</h2>
                  <p>Tests Autobahn|Python WebSocket clients against the Autobahn|Testsuite server (fuzzingserver mode).</p>
                  <div class="test-grid">
          EOF
          
          # Add client report links
          for backend in twisted asyncio; do
            client_dir="client-reports-${backend}-${{ env.TEST_MODE }}"
            if [ -d "all-reports/${client_dir}" ]; then
              # Copy client reports to consolidated directory
              mkdir -p "consolidated-wstest-reports/client-${backend}"
              cp -r "all-reports/${client_dir}"/* "consolidated-wstest-reports/client-${backend}/" || true
              
              # Add card to index
              cat >> consolidated-wstest-reports/index.html << EOF
                      <div class="test-card">
                          <h3>${backend^} Client</h3>
                          <p>Autobahn|Python ${backend} WebSocket client implementation</p>
                          <a href="client-${backend}/index.html">📊 View Test Results</a>
                      </div>
EOF
            else
              echo "⚠️  Client report directory not found: ${client_dir}"
            fi
          done
          
          cat >> consolidated-wstest-reports/index.html << 'EOF'
                  </div>
              </div>

              <div class="test-section">
                  <h2>📥 Server Testing</h2>
                  <p>Tests both Autobahn|Python WebSocket servers (Twisted & asyncio) against the Autobahn|Testsuite client (fuzzingclient mode).</p>
                  <div class="server-note">
                      <strong>Note:</strong> Server testing runs both implementations concurrently and generates a unified report covering both backends.
                  </div>
                  <div class="test-grid">
          EOF
          
          # Add server report link
          server_dir="server-reports-${{ env.TEST_MODE }}"
          if [ -d "all-reports/${server_dir}" ]; then
            # Copy server reports to consolidated directory
            mkdir -p "consolidated-wstest-reports/servers"
            cp -r "all-reports/${server_dir}"/* "consolidated-wstest-reports/servers/" || true
            
            # Add card to index
            cat >> consolidated-wstest-reports/index.html << 'EOF'
                      <div class="test-card">
                          <h3>Twisted + asyncio Servers</h3>
                          <p>Both Autobahn|Python WebSocket server implementations tested together</p>
                          <a href="servers/index.html">📊 View Unified Server Results</a>
                      </div>
EOF
          else
            echo "⚠️  Server report directory not found: ${server_dir}"
          fi
          
          cat >> consolidated-wstest-reports/index.html << 'EOF'
                  </div>
              </div>

              <hr>
              <p><small>Generated by <a href="https://github.com/crossbario/autobahn-python">Autobahn|Python</a>
              CI/CD pipeline using <a href="https://github.com/crossbario/autobahn-testsuite">Autobahn|Testsuite</a> • 
              <a href="https://github.com/crossbario/autobahn-python/tree/${{ github.sha }}">Source Code</a></small></p>
          </body>
          </html>
          EOF
          
          echo "✅ Consolidated report created"
          ls -la consolidated-wstest-reports/

      - name: Upload consolidated WebSocket reports
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-wstest-reports-${{ env.TEST_MODE }}
          path: consolidated-wstest-reports/
          retention-days: 30

      - name: Report summary
        run: |
          echo "==> WebSocket Conformance Testing Complete"
          echo "Test Mode: ${{ env.TEST_MODE }}"
          echo "Reports generated for:"
          find consolidated-wstest-reports -name "index.html" | sort
          echo ""
          echo "📄 Access consolidated report: consolidated-wstest-reports/index.html"
          echo "🔗 Individual reports available in job artifacts"