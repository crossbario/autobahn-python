# IMPORTANT: This workflow requires to create and add the fine-grained PAT as a secret:
#
#   - Go to GitHub → Settings → Developer settings → Personal access tokens → Fine-grained tokens.
#   - Create a token for your repo with “Issues: Read & Write” and “Pull requests: Read & Write”.
#   - Copy the generated token value*
#   - Add it to your repo as a secret named GH_FINEGRAINED_TOKEN (Settings → Secrets and variables → Actions → New repository secret)
#   - Paste the token value* into the “Secret *” field.

on:
  workflow_run:
    workflows: ["wstest"] # <-- match exactly the name in your wstest.yml 'name:' field
    types:
      - completed
  workflow_dispatch: # <-- allow manual dispatch to allow debug GH actions shit

jobs:
  post-summary:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' }}
    steps:
      - name: Download summary artifact
        uses: actions/github-script@v7
        with:
          script: |
            const run_id = ${{ github.event.workflow_run.id }};
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id,
            });
            // Find the artifact whose name starts with 'conformance-summary-'
            const summaryArtifact = artifacts.data.artifacts.find(a => a.name.startsWith('conformance-summary-'));
            if (!summaryArtifact) {
              core.setFailed('No summary artifact found');
              return;
            }
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: summaryArtifact.id,
              archive_format: 'zip',
            });
            const fs = require('fs');
            const unzip = require('unzipper');
            await fs.promises.writeFile('summary.zip', Buffer.from(download.data));
            await fs.createReadStream('summary.zip').pipe(unzip.Extract({ path: 'summary' })).promise();

      - name: Post summary as PR comment
        uses: actions/github-script@v7
        env:
          GH_TOKEN: ${{ secrets.GH_FINEGRAINED_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            // Find the summary.md file inside the unzipped artifact folder
            const summaryDir = 'summary';
            let summaryPath = null;
            // Find summary.md anywhere in the unzipped folder
            const walk = (dir) => {
              for (const file of fs.readdirSync(dir)) {
                const fullPath = `${dir}/${file}`;
                if (fs.statSync(fullPath).isFile() && file === 'summary.md') {
                  summaryPath = fullPath;
                  return;
                } else if (fs.statSync(fullPath).isDirectory()) {
                  walk(fullPath);
                  if (summaryPath) return;
                }
              }
            };
            walk(summaryDir);
            if (!summaryPath) {
              core.setFailed('summary.md not found in artifact');
              return;
            }
            const summary = fs.readFileSync(summaryPath, 'utf8');
            // Get PR number from workflow_run event
            const prs = github.event.workflow_run.pull_requests;
            if (!prs || prs.length === 0) {
              core.setFailed('No PR found in workflow_run event');
              return;
            }
            const pr_number = prs[0].number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: summary
            });
