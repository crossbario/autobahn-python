# IMPORTANT: This workflow requires to create and add the fine-grained PAT as a secret:
#
#   - Go to GitHub → Settings → Developer settings → Personal access tokens → Fine-grained tokens.
#   - Create a token for your repo with “Issues: Read & Write” and “Pull requests: Read & Write”.
#   - Copy the generated token value*
#   - Add it to your repo as a secret named GH_FINEGRAINED_TOKEN (Settings → Secrets and variables → Actions → New repository secret)
#   - Paste the token value* into the “Secret *” field.

name: post-summary

on:
  workflow_run:
    workflows: ["wstest"] # <-- match exactly the name in wstest.yml 'name:' field
    types:
      - completed

jobs:
  post-summary:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' }}
    steps:
      - name: Download full summary artifact
        uses: actions/download-artifact@v4
        with:
          name: conformance-summary-full
        continue-on-error: true

      - name: Download quick summary artifact
        uses: actions/download-artifact@v4
        with:
          name: conformance-summary-quick
        continue-on-error: true

      - name: Post summary as PR comment
        uses: actions/github-script@v7
        env:
          GH_TOKEN: ${{ secrets.GH_FINEGRAINED_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            let summaryPath = '';
            if (fs.existsSync('conformance-summary-full/summary.md')) {
              summaryPath = 'conformance-summary-full/summary.md';
            } else if (fs.existsSync('conformance-summary-quick/summary.md')) {
              summaryPath = 'conformance-summary-quick/summary.md';
            } else {
              core.setFailed('No summary.md found');
              return;
            }
            const summary = fs.readFileSync(summaryPath, 'utf8');
            // Get PR number from workflow_run event
            const prs = github.event.workflow_run.pull_requests;
            if (!prs || prs.length === 0) {
              core.setFailed('No PR found in workflow_run event');
              return;
            }
            const pr_number = prs[0].number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: summary
            });
