name: post-summary

on:
  # Use pull_request_target to run in main repo context (required for GITHUB_TOKEN write permissions)
  pull_request_target:
    types: [opened, synchronize, reopened]
  
  # Auto-trigger after wstest workflow completes
  workflow_run:
    workflows: ["wstest"]
    types:
      - completed
  
  # Allow manual dispatch for debugging
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to post summary for'
        required: true
        type: string

jobs:
  add-comment:
    runs-on: ubuntu-latest
    # Only run if wstest was successful OR if manually dispatched OR if pull_request_target
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request_target' }}
    
    steps:
      - name: Get PR information
        id: pr-info
        uses: actions/github-script@v7
        with:
          script: |
            let pr_number, head_repo, head_ref;
            
            if (context.eventName === 'workflow_dispatch') {
              // Manual dispatch - get PR info from input
              pr_number = context.payload.inputs.pr_number;
              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number
              });
              head_repo = pr.head.repo.full_name;
              head_ref = pr.head.ref;
            } else if (context.eventName === 'pull_request_target') {
              // pull_request_target trigger - get PR info from event
              pr_number = context.payload.pull_request.number;
              head_repo = context.payload.pull_request.head.repo.full_name;
              head_ref = context.payload.pull_request.head.ref;
            } else {
              // workflow_run trigger - get PR info from workflow_run event
              const prs = context.payload.workflow_run.pull_requests;
              if (!prs || prs.length === 0) {
                core.setFailed('No PR found in workflow_run event');
                return;
              }
              pr_number = prs[0].number;
              head_repo = prs[0].head.repo.full_name;
              head_ref = prs[0].head.ref;
            }
            
            console.log(`PR: #${pr_number}, Repo: ${head_repo}, Branch: ${head_ref}`);
            
            // Set outputs for next steps
            core.setOutput('pr_number', pr_number);
            core.setOutput('head_repo', head_repo);
            core.setOutput('head_ref', head_ref);
            
            // Construct summary filename
            const summary_filename = `${head_repo}-${head_ref}-${pr_number}-wstest-summary.md`;
            core.setOutput('summary_filename', summary_filename);

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.pr-info.outputs.head_repo }}
          ref: ${{ steps.pr-info.outputs.head_ref }}
          fetch-depth: 2  # Need at least 2 commits to detect changes

      - name: Check if summary file exists and was changed
        id: file-check
        run: |
          SUMMARY_FILE=".audit/${{ steps.pr-info.outputs.summary_filename }}"
          echo "Checking file: $SUMMARY_FILE"
          
          if [[ ! -f "$SUMMARY_FILE" ]]; then
            echo "❌ Summary file not found: $SUMMARY_FILE"
            echo "should_comment=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "✅ Summary file found"
          
          # Check if file was changed in the last commit (from wstest workflow)
          if git diff HEAD~1 HEAD --name-only | grep -q "$SUMMARY_FILE"; then
            echo "✅ Summary file was updated in latest commit"
            echo "should_comment=true" >> $GITHUB_OUTPUT
          else
            echo "ℹ️  Summary file exists but wasn't changed"
            echo "should_comment=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        if: steps.file-check.outputs.should_comment == 'true'
        uses: thollander/actions-comment-pull-request@v3
        with:
          pr_number: ${{ steps.pr-info.outputs.pr_number }}
          filePath: .audit/${{ steps.pr-info.outputs.summary_filename }}
          comment_tag: wstest-conformance-summary
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip comment (file unchanged)
        if: steps.file-check.outputs.should_comment == 'false'
        run: |
          echo "ℹ️  Skipping PR comment - summary file was not changed or not found"