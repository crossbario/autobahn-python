[tox]
skip_missing_interpreters = true
envlist =
    flake8
    coverage
    sphinx

    # CPython
    py36-{tw189,tw1910,tw203,twtrunk,asyncio}
    py37-{tw189,tw1910,tw203,twtrunk,asyncio}
    py38-{tw189,tw1910,tw203,twtrunk,asyncio}
    py39-{tw189,tw1910,tw203,twtrunk,asyncio}

    # PyPy
    pypy36-{tw189,tw1910,tw203,twtrunk,asyncio}
    pypy37-{tw189,tw1910,tw203,twtrunk,asyncio}


# MAP: GitHub Actions Python Name => Tox Env Name (for Python)
#
# when called without a specific environment ("-e"), detect the
# python version / get from GH action, and map to tox env
#
# https://github.com/ymyzk/tox-gh-actions
#
[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    pypy-3.6: pypy36
    pypy-3.7: pypy37


[testenv]
deps =
    coverage
    pytest

    ; txaio
    git+https://github.com/crossbario/txaio

    ; twisted dependencies
    tw189: twisted==18.9.0
    tw1910: twisted==19.10.0
    tw203: twisted==20.3.0
    # twtrunk: https://github.com/twisted/twisted/archive/trunk.zip
    twtrunk: git+https://github.com/twisted/twisted
    {tw189,tw1910,tw203,twtrunk}: pytest-twisted

    ; asyncio dependencies
    asyncio: pytest_asyncio

extras =
    encryption
    serialization
    scram
    nvx
    xbr

whitelist_externals =
    sh
    coverage
    codecov
    cp
    mkdir
    rm
    ls
    mv
    curl
    unzip
    find

setenv =
    # NaCl/Sodium: use and build bundled sources (don't use any system library)
    SODIUM_INSTALL=bundled

    # controls build of WAMP serializers:
    PYUBJSON_NO_EXTENSION=1
    # AUTOBAHN_USE_NVX=1
    # AUTOBAHN_USE_UJSON=1
    # AUTOBAHN_USE_CBOR2=1

    # controls test setup according to networking framework
    asyncio: USE_ASYNCIO=1
    asyncio: PYTHONPATH={toxinidir}
    tw189,tw1910,tw203,twtrunk: USE_TWISTED=1

    # this enables "autobahn/test/test_rng.py" (on Linux),
    # which tests entropy depletion, and tests how to correctly
    # read _real_ entropy and block if not enough _real_ entropy is currently avail
    # also: https://github.com/crossbario/autobahn-python/issues/1275
    # AUTOBAHN_CI_ENABLE_RNG_DEPLETION_TESTS = 1

commands =
    # download and extract archive with XBR ABI files into package directory for bundling
    rm -f /tmp/xbr-protocol-latest.zip
    curl -s https://xbr.network/lib/abi/xbr-protocol-latest.zip -o /tmp/xbr-protocol-latest.zip
    unzip -t /tmp/xbr-protocol-latest.zip
    rm -rf ./autobahn/xbr/contracts
    unzip /tmp/xbr-protocol-latest.zip -d ./autobahn/xbr/contracts

    # install package
    pip install -U pip
    sh -c "which python && which pip && python -V"
    pip install --no-cache --ignore-installed --force-reinstall .[twisted,asyncio,compress,serialization,encryption,scram,xbr]

    asyncio: pytest -v --ignore=./autobahn/twisted ./autobahn
    tw189,tw1910,tw203: trial ./autobahn
    twtrunk: python -m twisted.trial ./autobahn


[testenv:flake8]
skip_install = True
deps =
    flake8
    pep8-naming
exclude = autobahn/wamp/gen
max-line-length = 119
commands =
    python -V
    flake8 --version
    flake8 -v --statistics \
        --ignore=E402,E501,E722,E741,N801,N802,N803,N805,N806,N815 \
        --exclude "autobahn/wamp/message_fbs.py,autobahn/wamp/gen/*" \
        autobahn


[testenv:coverage]
skip_install = False
deps =
    coverage
    codecov
    pytest
    pytest_asyncio
    pytest-twisted
    twisted
    git+https://github.com/crossbario/txaio
extras =
    encryption
    serialization
    scram
    nvx
    xbr
passenv =
    CODECOV_TOKEN
commands =
    # download and extract archive with XBR ABI files into package directory for bundling
    rm -f /tmp/xbr-protocol-latest.zip
    curl -s https://xbr.network/lib/abi/xbr-protocol-latest.zip -o /tmp/xbr-protocol-latest.zip
    unzip -t /tmp/xbr-protocol-latest.zip
    rm -rf ./autobahn/xbr/contracts
    unzip /tmp/xbr-protocol-latest.zip -d ./autobahn/xbr/contracts

    # install package with all optional extensions
    pip install .[all]

    # test autobahn on asyncio (run under coverage)
    sh -c 'USE_ASYNCIO=1 coverage run --parallel-mode --include "*/autobahn/asyncio/*" --omit "*/twisted/*" --omit "*/test/*.py" -m pytest -v --ignore=./autobahn/twisted ./autobahn'

    # test autobahn on twisted (run under coverage)
    sh -c 'USE_TWISTED=1 coverage run --parallel-mode --include "*/autobahn/*" --omit "*/asyncio/*" --omit "*/test/*.py" -m twisted.trial ./autobahn'

    coverage combine
    coverage report
    coverage html
    codecov


[testenv:sphinx]
description =
    Generate docs using Sphinx.
skip_install = False
deps =
    sphinx
    sphinx_rtd_theme
    sphinxcontrib.images
    git+https://github.com/crossbario/txaio
extras =
    twisted
    encryption
    serialization
    scram
    nvx
    xbr
commands =
    python -V
    sphinx-build --version
    python -c "from autobahn import xbr; print('HAS_XBR=' + str(xbr.HAS_XBR))"

    # first test with all warnings fatal
    find ./docs -name "*.rst"
    sphinx-build -WT -b dummy ./docs ./docs/_build

    # generate HTML output
    sphinx-build -b html ./docs ./docs/_build
